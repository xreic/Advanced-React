# This is what the React client interfaces with
# Public facing API

# import * from './generated/prisma.graphql'

# Can make your own types to
# return a specific data shape
type SuccessMessage {
  message: String
}

# This is for security
# In prisma.graphql, the resetToken and resetTokenExpiry
#   can be sent back to the user, which can be exploited
# Do this to make sure that the token cannot be sent back
#   as then fields do not exist in this data shape
type User {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]!
  cart: [CartItem!]!
}

type Mutation {
  createItem(
    title: String
    description: String
    price: Int
    image: String
    largeImage: String
  ): Item!

  updateItem(id: ID!, title: String, description: String, price: Int): Item!

  deleteItem(id: ID!): Item

  signup(email: String!, password: String!, name: String!): User!

  signin(email: String!, password: String!): User!

  signout: SuccessMessage

  requestReset(email: String!): SuccessMessage

  resetPassword(
    resetToken: String!
    password: String!
    confirmPassword: String!
  ): User!

  updatePermissions(userId: ID!, permissions: [Permission]): User!

  addToCart(id: ID!): CartItem

  removeFromCart(id: ID!): CartItem

  createOrder(token: String!): Order!
}

type Query {
  items(
    where: ItemWhereInput
    orderBy: ItemOrderByInput
    skip: Int
    first: Int
  ): [Item]!

  item(where: ItemWhereUniqueInput!): Item

  itemsConnection(where: ItemWhereInput): ItemConnection!

  me: User

  users: [User]!

  order(id: ID!): Order

  orders(orderBy: OrderOrderByInput): [Order]!
}
